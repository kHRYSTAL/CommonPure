apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion compile_sdk_version
    buildToolsVersion build_tools_version
    defaultConfig {
        applicationId "com.yimeiduo.business"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionCode 1
        versionName "1.0.01"
        flavorDimensions "versionCode"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
                arguments = [moduleName: project.getName()]
            }
        }
//        javaCompileOptions { annotationProcessorOptions { includeCompileClasspath = true } }

       /* ndk {
            //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters "armeabi", "armeabi-v7a", "x86","x86_64"
//            "arm64-v8a",
        }*/

        manifestPlaceholders = [
                JPUSH_PKGNAME : applicationId,
                JPUSH_APPKEY : "6965b09a1b56dad727ff2037", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL : "developer-default", //暂时填写默认值即可.
        ]
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
        debug {
            storeFile file(keystoreProperties['debugStoreFile'])
            storePassword keystoreProperties['debugStorePassword']
            keyAlias keystoreProperties['debugKeyAlias']
            keyPassword keystoreProperties['debugKeyPassword']
        }
    }

    buildTypes {
        release {
            // 混淆
            minifyEnabled false
            //该构建类型是否生成一个可调式的apk
            debuggable true
            // 是否使用zipAlign优化apk,Android sdk包里面的工具，能够对打包的应用程序进行优化，让整个系统运行的更快
            zipAlignEnabled true
            // proguardFiles 指定插件使用的混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release  //签名

            /*ndk {
                //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
                abiFilters "armeabi-v7a", "x86"
            }*/
        }
        debug {
            minifyEnabled false
            debuggable true
            signingConfig signingConfigs.debug  //签名
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }

    productFlavors{
        wandoujia{
            //manifestPlaceholders = [UMENG_CHANNEL_VALUE: "wandoujia"]
        }
        xiaomi{
            //manifestPlaceholders=[UMENG_CHANNEL_VALUE: "xiaomi"]
        }
        huawei{
            //manifestPlaceholders=[UMENG_CHANNEL_VALUE: "huawei"]
        }
        constructor{

        }
    }
    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                def fileName = "novel_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                def fileName = outputFile.name.replace(".apk", "-${defaultConfig.versionName}.apk")
                outputFileName = fileName
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.multidex:multidex:2.0.0'
    implementation project(':imagepicker')


    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    /*okhttp3*/
    implementation 'com.squareup.okhttp3:okhttp:3.4.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.6.0'

    /*rxjava2*/
    implementation 'io.reactivex.rxjava2:rxjava:2.0.1'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    /*Gson*/
    implementation 'com.google.code.gson:gson:2.6.2'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    /*图片处理*/
    implementation 'com.github.bumptech.glide:glide:3.7.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    //    implementation 'com.android.support:appcompat-v7:28.0.0'

    //下拉刷新
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0-alpha-20'

    //没有使用特殊Header，可以不加这行
    implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0-alpha-20'

    //动态权限
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    //黄油刀
    implementation 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    implementation 'com.github.chenBingX:SuperTextView:v3.1.4'

    //选择器
    implementation 'com.contrarywind:Android-PickerView:4.1.9'

    /*轮播图*/
    implementation 'com.youth.banner:banner:1.4.10'

    //Android自定义相册，完全仿微信UI，实现了拍照、图片选择（单选/多选）、 裁剪 、旋转、等功能。

    //    implementation 'com.lzy.widget:imagepicker:0.6.1'  //指定版本

    implementation 'com.lxj:xpopup:1.8.10'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'org.litepal.android:core:1.5.0'
    implementation 'com.github.anzewei:parallaxbacklayout:1.1.6'
    implementation 'com.github.chaychan:MultipleItemRvAdapter:1.0.4'
    implementation 'com.alibaba:fastjson:1.1.68.android'

    //腾讯QUI
    implementation 'com.qmuiteam:qmui:1.4.0'

    //圆角
    implementation 'com.github.siyamed:android-shape-imageview:0.9.+@aar'

    //生成二维码
    implementation 'com.google.zxing:core:3.3.2'

    implementation 'com.github.chaychan:BottomBarLayout:1.0.1'
    implementation 'com.github.nukc.stateview:library:1.2.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    debugImplementation 'com.github.markzhai:blockcanary-android:1.5.0'
}
